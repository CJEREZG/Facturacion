/*****************************************************************************/
/*  Fichero    : PlanVcto.pc                                                 */
/*  Descripcion: Planes de Descuento                                         */
/*****************************************************************************/
#define _PLANVCTO_PC_


#include "PlanVcto.h"

EXEC SQL INCLUDE sqlca;
EXEC SQL BEGIN DECLARE SECTION;
	    char    szFormatoFec  [17];EXEC SQL VAR szFormatoFec IS STRING(17);
EXEC SQL END DECLARE SECTION;
	

/* **************************************************************** */
access BOOL bGetNumDiasPlanVcto (long plCodCliente, 
                                 long plCodCuenta, 
                                 int  piCodTipMovimien, 
                                 char *szFecEmision, 
                                 int  *iNumDias)
{
    char modulo[]   = "bGetNumDiasPlanVcto";

	EXEC SQL BEGIN DECLARE SECTION;
	    int     ihNumDias     = 0;
	    long    lhCodCliente    ;
	    long    lhCodCuenta     ;
	    int     ihCodTipMovimien;
	    char    szhFecEmision  [15];EXEC SQL VAR szhFecEmision IS STRING(15);
	EXEC SQL END DECLARE SECTION;

    vDTrazasLog  (modulo,"\tempezando %s\n",LOG05,modulo);
    ihNumDias     = 0;
    ihCodTipMovimien=piCodTipMovimien;
    strcpy(szhFecEmision, szFecEmision);

    lhCodCliente= plCodCliente;
    vDTrazasLog  (modulo,"\t\tCodigo Cliente : [%ld]\n",LOG05,lhCodCliente);
    
    strcpy(szFormatoFec,"YYYYMMDDHH24MISS");
    
    EXEC SQL SELECT B.NUM_DIASVENCIMIE
             INTO   :ihNumDias
             FROM   FAT_PLANVENCICLIE A, FAD_PLANVENCIMIE B
             WHERE  A.COD_CLIENTE       =:lhCodCliente
                    AND COD_TIPMOVIMIENT=:ihCodTipMovimien
                    AND A.COD_PLANVENCIMIE=B.COD_PLANVENCIMIE
                    AND TO_DATE(:szhFecEmision, :szFormatoFec) BETWEEN FEC_DESDE AND FEC_HASTA;

    if (SQLCODE != SQLOK && SQLCODE != SQLNOTFOUND)
    {
        vDTrazasError(modulo,"Al consultar FAT_PLANVENCICLIE/GAD_PLANVENCIMIE\n%s\n"
                         ,LOG01,sqlca.sqlerrm.sqlerrmc);
    	vDTrazasLog  (modulo,"Al consultar FAT_PLANVENCICLIE/GAD_PLANVENCIMIE\n%s\n"
    		             ,LOG01,sqlca.sqlerrm.sqlerrmc);
    	return FALSE;
        
    }
    if (SQLCODE == SQLNOTFOUND)
    {
        lhCodCuenta= plCodCuenta;
        vDTrazasLog  (modulo,"\tCodigo Cuenta : [%ld]\n",LOG05,lhCodCuenta);
        
        EXEC SQL SELECT B.NUM_DIASVENCIMIE
                 INTO   :ihNumDias
                 FROM   FAT_PLANVENCICTA A, FAD_PLANVENCIMIE B
                 WHERE  A.COD_CUENTA=:lhCodCuenta
                        AND COD_TIPMOVIMIENT=:ihCodTipMovimien
                        AND A.COD_PLANVENCIMIE=B.COD_PLANVENCIMIE
                        AND TO_DATE(:szhFecEmision, :szFormatoFec) BETWEEN FEC_DESDE AND FEC_HASTA;
        
        if (SQLCODE != SQLOK && SQLCODE != SQLNOTFOUND)
        {
            vDTrazasError(modulo,"Al consultar FAT_PLANVENCICTA/GAD_PLANVENCIMIE\n%s\n"
                             ,LOG01,sqlca.sqlerrm.sqlerrmc);
        	vDTrazasLog  (modulo,"Al consultar FAT_PLANVENCICTA/GAD_PLANVENCIMIE\n%s\n"
        		             ,LOG01,sqlca.sqlerrm.sqlerrmc);
        	return FALSE;
            
        }

    }
    if (ihNumDias > 0)
    {
        *iNumDias=ihNumDias;
    }
    else
    {
        *iNumDias=0;
    }
    return TRUE;
    
}

/* **************************************************************** */
/*****************************************************************************/
/*  Funcion : bfnDiasVencimiento                                             */
/* -Valores Retorno : Error->FALSE, !Error->TRUE                             */
/*****************************************************************************/
BOOL bfnDiasVencimiento (long lCliente, 
                                long lCuenta,
                                int  iCodTipMovimien, 
                                char *szFecEmision, 
                                char *szFecVencimi, 
                                char *szFecFinal)
{
    char modulo[]   = "bfnDiasVencimiento";

    int iNumDias=0;
    
    
    vDTrazasLog (modulo,"\n\t*****---> Inicio Funcion de Plan de Vencimientos <---- *****",LOG04);
    
    if (!bGetNumDiasPlanVcto (lCliente, lCuenta, iCodTipMovimien, szFecEmision, &iNumDias))
    {
        vDTrazasError(modulo,"Al rescatar dias de Plan Vcto. \n%s\n"
                             ,LOG01,sqlca.sqlerrm.sqlerrmc);
        vDTrazasLog  (modulo,"Al rescatar dias de Plan Vcto. \n%s\n"
        	    	         ,LOG01,sqlca.sqlerrm.sqlerrmc);
        return FALSE;
    }
    vDTrazasLog (modulo,"\t\t Cantidad de Dias de Vcto. [%d]\n" ,LOG05,iNumDias);
    
    if (iNumDias> 0)
    {
        if (!bSumaDias ( szFecFinal, szFecEmision, iNumDias))
        {
            vDTrazasError(modulo,"Al sumar dias a la fecha de emision \n%s\n"
                         ,LOG01,sqlca.sqlerrm.sqlerrmc);
            vDTrazasLog  (modulo,"Al sumar dias a la fecha de emision \n%s\n"
        	    	     ,LOG01,sqlca.sqlerrm.sqlerrmc);
        	return FALSE;
                
        }
        vDTrazasLog(modulo,"\t\t Encontrado Plan Vcto. Fecha Vcto. [%s]\n",LOG05,szFecFinal);
        if (!bBuscaDiaHabil (szFecFinal, szFecFinal))
        {
            vDTrazasError(modulo,"Al buscar dia habil \n%s\n",LOG01,sqlca.sqlerrm.sqlerrmc);
            vDTrazasLog  (modulo,"Al buscar dia habil \n%s\n",LOG01,sqlca.sqlerrm.sqlerrmc);
        	return FALSE;
        }
        vDTrazasLog(modulo,"\t\t Fecha Vcto. Habil [%s]\n",LOG05,szFecFinal);
    }
    else
    {
        strcpy ( szFecFinal, szFecVencimi );
    }
    return TRUE;
}    
  
/* **************************************************************** */
/* **************************************************************** */
BOOL bBuscaDiaHabil (char *pszFecha, char *pszFecFinal)
{
    char modulo[]   = "bBuscaDiaHabil";

	int iIndHabil=0;
	int iIndFeria=0;
	vDTrazasLog  (modulo,"\tempezando %s\n",LOG05,modulo);
	while (1)
	{
    	if(!bDiaFeriado(pszFecha, &iIndFeria))
        {
            vDTrazasError(modulo,"Al determinar dia feriado \n%s\n",LOG01,sqlca.sqlerrm.sqlerrmc);
            vDTrazasLog  (modulo,"Al determinar dia feriado \n%s\n",LOG01,sqlca.sqlerrm.sqlerrmc);
            return (FALSE);
        }
        else
        {
            if (iIndFeria==0)
            {
        	    if (!bGetTipoDia(pszFecha, &iIndHabil))
        	    {
                    vDTrazasError(modulo,"Al determinar dia habil \n%s\n",LOG01,sqlca.sqlerrm.sqlerrmc);
                    vDTrazasLog  (modulo,"Al determinar dia habil \n%s\n",LOG01,sqlca.sqlerrm.sqlerrmc);
                    return (FALSE);
        	    }
        	    if (iIndHabil == 1);
        	}
        }
        if (iIndFeria==1 || iIndHabil==0)
        {
            if (!bSumaDias ( pszFecha, pszFecha, 1))
            {
                vDTrazasError(modulo,"Al sumar dias a la fecha inhabil \n%s\n",LOG01,sqlca.sqlerrm.sqlerrmc);
                vDTrazasLog  (modulo,"Al sumar dias a la fecha inhabil \n%s\n",LOG01,sqlca.sqlerrm.sqlerrmc);
            	return (FALSE);
            }
        	vDTrazasLog  (modulo,"Fecha sumada  %s\n",LOG05,pszFecha);
        }
        else
        {
            break;
        }
    }
    strcpy (pszFecFinal, pszFecha);
   	return (TRUE);
	
}

/* **************************************************************** */
/* **************************************************************** */
BOOL bGetTipoDia (char *pszFecha, int *iIndHab)
{
    char modulo[]   = "bGetTipoDia";
	
	EXEC SQL BEGIN DECLARE SECTION;
	char	szhFecha[15]   ;EXEC SQL VAR szhFecha IS STRING(15);
	int	    ihNumDia       ;
	char   szD[2];        EXEC SQL VAR szD IS STRING(2);
	EXEC SQL END DECLARE SECTION;
	
	vDTrazasLog  (modulo,"\tempezando %s\n",LOG05,modulo);
	strcpy(szhFecha, pszFecha);
  
  strcpy(szFormatoFec,"YYYYMMDDHH24MISS");
  strcpy(szD,"D");
  
	EXEC SQL SELECT TO_CHAR(TO_DATE(:szhFecha, :szFormatoFec), :szD)
	         INTO   :ihNumDia
	         FROM   DUAL;
	
	if(sqlca.sqlcode != SQLOK)
	{
        vDTrazasError(modulo,"Al determinar dia habil \n%s\n",LOG01,sqlca.sqlerrm.sqlerrmc);
        vDTrazasLog  (modulo,"Al determinar dia habil \n%s\n",LOG01,sqlca.sqlerrm.sqlerrmc);
        return (FALSE);
	}
	
	switch(ihNumDia)
   {
   	case	2:
   	case 	3:
   	case	4:
   	case	5:
   	case    6:
   		*iIndHab = 1;
   		break;
   	
   	default:
   		*iIndHab = 0;
   		break;
   }
	return(TRUE);
}

/* **************************************************************** */
/* **************************************************************** */
BOOL bDiaFeriado (char *pszFecha, int *iIndFeria)
{
    int i;
    char modulo[]   = "bDiaFeriado";
    
	vDTrazasLog  (modulo,"\tempezando %s\n",LOG05,modulo);

    *iIndFeria=0;
    for (i=0; i<=NUM_FERIADOS;i++)
    {
        vDTrazasLog  (modulo,"feriados \n%s\n",LOG06, pstFeriados[i].szFecFeriado );
        if (strcmp (pszFecha, pstFeriados[i].szFecFeriado  ) == 0)
        {
            *iIndFeria=1;
            break;
        }
    }
    
    return (TRUE);
}





/******************************************************************************************/
/** Información de Versionado *************************************************************/
/******************************************************************************************/
/** Pieza                                               : */
/**  %ARCHIVE% */
/** Identificador en PVCS                               : */
/**  %PID% */
/** Producto                                            : */
/**  %PP% */
/** Revisión                                            : */
/**  %PR% */
/** Autor de la Revisión                                : */
/**  %AUTHOR% */
/** Estado de la Revisión ($TO_BE_DEFINED es Check-Out) : */
/**  %PS% */
/** Fecha de Creación de la Revisión                    : */
/**  %DATE% */
/** Worksets ******************************************************************************/
/** %PIRW% */
/** Historia ******************************************************************************/
/** %PL% */
/******************************************************************************************/

